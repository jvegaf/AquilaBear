[gcode_macro START_PRINT]
gcode:
    {action_respond_info('|%s| |%s| |%d| |%d|' % (params.BED_TEMP, params.EXTRUDER_TEMP, params.BED_TEMP|int, params.EXTRUDER_TEMP|int))}
    {% set BED_TEMP = params.BED_TEMP|default(60)|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|int %}
    {% set FIRST_LAYER_HEIGHT = params.FIRST_LAYER_HEIGHT|default(0.35)|int %}    # Set extruder relative
    {% set FILAMENT_TYPE = params.FILAMENT_TYPE %}
    {% set BED_MAXIMUM = BED_TEMP + 3 %}
    {% set EXTRUDER_MAXIMUM = EXTRUDER_TEMP + 1 %}
    M83
    {action_respond_info(
        "Filament Type: %s\n"
        "Bed Temperature: %d-%d\n"
        "Extruder Temperature: %d-%d\n" % (
            FILAMENT_TYPE,
            BED_TEMP,
            BED_MAXIMUM,
            EXTRUDER_TEMP,
            EXTRUDER_MAXIMUM
        )
    )}
    # Load default bed mesh
    BED_MESH_PROFILE LOAD=default
    # Start nozzle heating
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    # Start bed heating
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    # gcode offset now set in sheets variable; use LOAD_SHEET
    # before printing||nint
    # SET_GCODE_OFFSET Z={GCODE_OFFSET}
    # Home the printer
    G28
     # Wait for bed to reach temperature using 3deg tolerance due to bed slightly overheating
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP} MAXIMUM={BED_MAXIMUM}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP} MAXIMUM={EXTRUDER_MAXIMUM}
    #BED_MESH_PROFILE LOAD=default
    # Set and wait for nozzle to reach temperature
    G92 E0.0
    # go outside print area for purge
    PRUSA_LINE_PURGE
    G92 E0.0
    M400
    M117 Hange Printing...


[gcode_macro END_PRINT]
gcode:
    #SET_SKEW CLEAR=1
    ;_TOOLHEAD_PARK_PAUSE_CANCEL    ; Park
    G0 Z50 ; Move to center of bed
    G0 G90 X10 Y 220
    M84 X Y E    ; Disable steppers
    TURN_OFF_HEATERS    ; Disable heaters
    M106 S0     ; Disable fans
    ;BED_MESH_CLEAR    ; Clear bed mesh



[gcode_macro PRUSA_LINE_PURGE]
## Purge line macro that replicates PrusaSlicer's default purge line
gcode:
    G1 Z0.2 F720
    G1 Y3 F1000 ; go outside print area
    G92 E0
    G1 X60 E9 F1000 ; intro line
    G1 X100 E12.5 F1000 ; intro line
    G92 E0

[force_move]
enable_force_move: true ; enable FORCE_MOVE and SET_KINEMATIC_POSITION



[pause_resume]

[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause



[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        #SET_FILAMENT_SENSOR SENSOR=my_sensor ENABLE=1                                        ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S180                                                                             ; cool off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}
        
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        #SET_FILAMENT_SENSOR SENSOR=my_sensor ENABLE=1                                ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    #SDCARD_RESET_FILE
    END_PRINT
    BASE_CANCEL_PRINT

[gcode_macro SET_MATERIAL]
gcode:
    {% set MATERIAL = params.MATERIAL|default('PLA')|string %}
    {% if MATERIAL == 'PLA' %}
        # Set pressure_advance settings
        # SET_PRESSURE_ADVANCE ADVANCE=0.663 SMOOTH_TIME=0.040
        SET_PRESSURE_ADVANCE ADVANCE=0.058 SMOOTH_TIME=0.040
    {% elif MATERIAL == 'Matte PLA' %}
        SET_PRESSURE_ADVANCE ADVANCE=0.630 SMOOTH_TIME=0.040
        SET_GCODE_OFFSET Z=-0.080 MOVE=1
    {% elif MATERIAL == 'PLA+' %}
        SET_PRESSURE_ADVANCE ADVANCE=0.650 SMOOTH_TIME=0.040
        SET_GCODE_OFFSET Z=-0.020 MOVE=1
    {% elif MATERIAL == 'PETG' %}
        SET_PRESSURE_ADVANCE ADVANCE=0.900 SMOOTH_TIME=0.040
        SET_GCODE_OFFSET Z=-0.180 MOVE=1
    {% elif MATERIAL == 'ABS' %}
        SET_PRESSURE_ADVANCE ADVANCE=0.900 SMOOTH_TIME=0.040
        SET_GCODE_OFFSET Z=-0.130 MOVE=1
    {% endif %}

[gcode_macro EXTRUDER_PID]
gcode:
        #G28
        #G0 G90 Z150
        PID_CALIBRATE HEATER=extruder TARGET=240
        SAVE_CONFIG

[gcode_macro BED_PID]
gcode:
        #G28
        #G0 G90 Z150
        PID_CALIBRATE HEATER=heater_bed TARGET=80
        SAVE_CONFIG

[gcode_macro HOME_ALL]
gcode:
        G28 #home all axis


[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=unload_state
    G91
    {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M109 S{params.TEMP|default(220, true)}
    {% endif %}
    M117 Unloading filament...
    G92 E0.0
    G91
    G1 E-45 F5000
    G1 E-15 F1000
    G1 E-20 F1000
    G90
    G92 E0.0
    M400
    M117 Remove Filament Now!
    M300 S300 P1000
    M117 Filament unloaded!
    RESTORE_GCODE_STATE NAME=unload_state
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=load_state
    G91
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    M109 S{params.TEMP|default(220, true)}
    {% endif %}
    M117 Loading filament...
    # Load the filament into the hotend area.
    G92 E0.0
    G91
    G1 E70 F400
    G1 E40 F100
    G90
    G92 E0.0
    M400
    M117 Filament loaded!
    RESTORE_GCODE_STATE NAME=load_state
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=5
  
